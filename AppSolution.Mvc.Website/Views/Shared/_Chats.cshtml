@using Forloop.HtmlHelpers;
<div id="chatbar" class="page-chatbar">
    <div class="chatbar-contacts">
        <div class="contacts-search">
            <input type="text" class="searchinput" placeholder="Search Contacts" />
            <i class="searchicon fa fa-search"></i>
            <div class="searchhelper">Search Your Contacts and Chat History</div>
        </div>
        <ul class="contacts-list">
            <li class="contact">
                <div class="contact-avatar">
                    <img src="/assets/img/avatars/divyia.jpg" />
                </div>
                <div class="contact-info">
                    <div class="contact-name">All Users</div>
                    <div class="contact-status">
                        <div class="online"></div>
                        <div class="status">online</div>
                    </div>
                    <div class="last-chat-time">
                        @{System.DateTime.Now.ToShortTimeString();}
                    </div>
                </div>
            </li>
        </ul>
    </div>
    <div class="chatbar-messages" style="display: none;">
        <div class="messages-contact">
            <div class="contact-avatar">
                <img src="/assets/img/avatars/divyia.jpg" />
            </div>
            <div class="contact-info">
                <div class="contact-name">All Users</div>
                <div class="contact-status">
                    <div class="online"></div>
                    <div class="status">online</div>
                </div>
                <div class="last-chat-time">
                    @{System.DateTime.Now.ToShortTimeString();}
                </div>
                <div class="back">
                    <i class="fa fa-arrow-circle-left"></i>
                </div>
            </div>
        </div>
        <ul class="messages-list" id="messageBoard">
            <li class="message reply">
                <div class="message-info">
                    <div class="bullet"></div>
                    <div class="contact-name">System</div>
                    <div class="message-time"></div>
                </div>
                <div class="message-body">
                    Hi, Hope all is good. Are we meeting today?
                </div>
            </li>
        </ul>
        <div class="send-message">
            <span class="input-icon icon-right">
                <textarea id="messageBox" rows="3" class="form-control" placeholder="Type your message"></textarea>
                <i class="fa fa-camera themeprimary"></i>
            </span>
            <button id="btnSend" class="btn btn-info pull-right" onclick="sendMessage('@User.Identity.Name');">Send</button>
        </div>
    </div>
</div>
@using (var context = Html.BeginScriptContext())
{
    context.AddScriptBlock(
        @<script type="text/javascript">
            var noSupportMessage = "Your browser cannot support WebSocket!";
            var ws;
            $(document).keypress(function (e) {
                if (e.ctrlKey && e.which == 13 || e.which == 10) {
                    $("#btnSend").click();
                    document.body.focus();
                } else if (e.shiftKey && e.which == 13 || e.which == 10) {
                    $("#btnSend").click();
                    document.body.focus();
                }
            })
            function scrollToBottom(target) {
                target.animate({ scrollTop: $('ul#messageBoard li:last').offset().top });
            }

            function connectSocketServer() {
                var messageBoard = $('#messageBoard');
                var support = "MozWebSocket" in window ? 'MozWebSocket' : ("WebSocket" in window ? 'WebSocket' : null);
                if (support == null) {
                    alert(noSupportMessage);
                    AddMessageBoard(messageBoard, noSupportMessage);
                    return;
                }

                ws = new window[support]('ws://' + window.location.hostname + ':' + '8080');
                // when data is comming from the server, this metod is called
                ws.onmessage = function (evt) {
                    RecieveMessageBoard(messageBoard, evt.data);
                };
                // when the connection is established, this method is called
                ws.onopen = function () {
                    sendByMessage('@User.Identity.Name', 'I am connected.');
                    //ws.send('LOGIN @User.Identity.Name 123456');
                };
                // when the connection is closed, this method is called
                ws.onclose = function () {
                    sendByMessage('@User.Identity.Name', 'I am leaved');
                }
            }
            function sendMessage(userid) {
                if (ws) {
                    var messageBox = document.getElementById('messageBox');
                    var data = { "UserID": userid, "Message": messageBox.value };
                    ws.send(JSON.stringify(data));
                    messageBox.value = "";
                } else {
                    alert(noSupportMessage);
                }
            }
            function sendByMessage(userid, msg) {
                if (ws) {
                    var data = { "UserID": userid, "Message": msg };
                    ws.send(JSON.stringify(data));
                } else {
                    alert(noSupportMessage);
                }
            }
            function RecieveMessageBoard(messageBoard, msg) {
                var data = JSON.parse(msg);
                var cssClass = "message";
                if (data.UserID != '@User.Identity.Name') {
                    cssClass = "message reply";
                    Notify(data.UserID + ':' + data.Message, 'bottom-right', '5000', 'info', 'fa-envelope', true)
                }

                var template = "<li class=\"" + cssClass + "\">" +
                                  "<div class=\"message-info\">" +
                                     "<div class=\"bullet\"></div>" +
                                     "<div class=\"contact-name\">" + data.UserID + "</div>" +
                                     "<div class=\"message-time\">" + new Date().toLocaleTimeString() + "</div>" +
                                  "</div>" +
                                  "<div class=\"message-body\">" +
                                  data.Message +
                                  "</div>" +
                                  "</li>";
                messageBoard.append(template);
                scrollToBottom(messageBoard);
            }
            window.onload = function () {
                connectSocketServer();
            }
        </script>
        );
}
